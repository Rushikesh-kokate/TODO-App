{"version":3,"sources":["components/images/icon-sun.svg","components/images/icon-moon.svg","components/AddTodo.js","components/images/icon-cross.svg","components/DisplayTodo.js","App.js","reportWebVitals.js","index.js","components/DisplayTodo.module.css","components/AddTodo.module.css"],"names":["AddTodo","props","useState","inputValue","setinputValue","Mode","setMode","className","classes","lightMode","darkMode","onSubmit","event","preventDefault","trim","length","onsetTodo","htmlFor","inputLightMode","input","onChange","target","value","type","placeholder","theme","onClick","themeChange","src","moonIcon","sunIcon","alt","DisplayTodo","mode","container","darkContainer","itemList","darkItemList","items","map","val","darkItem","item","Name","removeTodo","id","cutX","App","todoList","settodoList","modeChange","setModeChange","name","prevState","Math","random","toString","removeArr","filter","removeItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iNAAe,MAA0B,qCCA1B,MAA0B,sC,OCgD1BA,EA1CC,SAACC,GACf,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwBF,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAmBA,OACE,sBAAKC,UAAe,UAAJF,EAAUG,IAAQC,UAAiBD,IAAQE,UAA3D,UACE,uBAAMC,SAnBgB,SAACC,GACzBA,EAAMC,iBAC2B,IAA7BV,EAAWW,OAAOC,SAItBd,EAAMe,UAAUb,GAChBC,EAAc,MAYZ,UACE,uBAAOa,QAAQ,OAAf,kBACA,uBACEV,UAAWF,EAAOG,IAAQU,eAAiBV,IAAQW,MACnDC,SAbmB,SAACR,GAC1BR,EAAcQ,EAAMS,OAAOC,QAarBA,MAAOnB,EACPoB,KAAK,OACLC,YAAY,4BAGhB,qBACEjB,UAAWC,IAAQiB,MACnBC,QAlBqB,WACzBpB,GAASD,GACTJ,EAAM0B,YAAYtB,IAiBduB,IAAKvB,EAAOwB,EAAWC,EACvBC,IAAI,iBC3CG,MAA0B,uC,gBC8B1BC,EAzBK,SAAC/B,GACnB,OACE,qBAAKM,UAAWN,EAAMgC,KAAOzB,IAAQ0B,UAAY1B,IAAQ2B,cAAzD,SACE,qBAAI5B,UAAWN,EAAMgC,KAAOzB,IAAQ4B,SAAW5B,IAAQ6B,aAAvD,uCAEGpC,EAAMqC,MAAMC,KAAI,SAACC,GAAD,OACf,qBAEEjC,UAAWN,EAAMgC,KAAOzB,IAAQiC,SAAWjC,IAAQkC,KAFrD,UAIGF,EAAIG,KAEH,qBACEjB,QAAS,kBAAMzB,EAAM2C,WAAWJ,EAAIK,KACpCjB,IAAKkB,EACLf,IAAI,aARHS,EAAIK,aCyBNE,EAjCH,WACV,MAAgC7C,mBAAS,IAAzC,mBAAO8C,EAAP,KAAiBC,EAAjB,KACA,EAAoC/C,mBAAS,IAA7C,mBAAOgD,EAAP,KAAmBC,EAAnB,KAmBA,OACE,eAAC,WAAD,WACE,cAAC,EAAD,CAASnC,UAnBU,SAACoC,GACtBH,GAAY,SAACI,GACX,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAEV,KAAMS,EAAMP,GAAIS,KAAKC,SAASC,kBAiBlB7B,YANb,SAACM,GAC1BkB,EAAclB,MAMZ,cAAC,EAAD,CACEK,MAAOU,EACPJ,WAhBoB,SAACC,GACzB,IAAMY,EAAY,YAAIT,GAAUU,QAC9B,SAACC,GAAD,OAAgBA,EAAWd,KAAOA,KAEpCI,EAAYQ,IAaRxB,KAAMiB,QCnBCU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,UAAY,+BAA+B,cAAgB,mCAAmC,SAAW,8BAA8B,aAAe,kCAAkC,KAAO,0BAA0B,SAAW,gC,kBCAtPD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,UAAY,2BAA2B,MAAQ,uBAAuB,eAAiB,gCAAgC,MAAQ,0B","file":"static/js/main.310adda2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","import React, { useState } from \"react\";\r\n\r\nimport classes from \"./AddTodo.module.css\";\r\nimport sunIcon from \"./images/icon-sun.svg\";\r\nimport moonIcon from \"./images/icon-moon.svg\";\r\n\r\nconst AddTodo = (props) => {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n  const [Mode, setMode] = useState(!true);\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (inputValue.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    props.onsetTodo(inputValue);\r\n    setinputValue(\"\");\r\n  };\r\n\r\n  const inputChangeHandler = (event) => {\r\n    setinputValue(event.target.value);\r\n  };\r\n  const themeChangeHandler = () => {\r\n    setMode(!Mode);\r\n    props.themeChange(Mode);\r\n  };\r\n  return (\r\n    <div className={Mode ? `${classes.lightMode}` : `${classes.darkMode}`}>\r\n      <form onSubmit={formSubmitHandler}>\r\n        <label htmlFor=\"task\">TODO</label>\r\n        <input\r\n          className={Mode ? classes.inputLightMode : classes.input}\r\n          onChange={inputChangeHandler}\r\n          value={inputValue}\r\n          type=\"text\"\r\n          placeholder=\"Create a new todo...\"\r\n        />\r\n      </form>\r\n      <img\r\n        className={classes.theme}\r\n        onClick={themeChangeHandler}\r\n        src={Mode ? moonIcon : sunIcon}\r\n        alt=\"sun icon\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default AddTodo;\r\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import React from \"react\";\r\n\r\nimport cutX from \"./images/icon-cross.svg\";\r\nimport classes from \"./DisplayTodo.module.css\";\r\n\r\nconst DisplayTodo = (props) => {\r\n  return (\r\n    <div className={props.mode ? classes.container : classes.darkContainer}>\r\n      <ul className={props.mode ? classes.itemList : classes.darkItemList}>\r\n        What's the Plan for Today?\r\n        {props.items.map((val) => (\r\n          <li\r\n            key={val.id}\r\n            className={props.mode ? classes.darkItem : classes.item}\r\n          >\r\n            {val.Name}\r\n            {\r\n              <img\r\n                onClick={() => props.removeTodo(val.id)}\r\n                src={cutX}\r\n                alt=\"x sign\"\r\n              />\r\n            }\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayTodo;\r\n","import React, { Fragment, useState } from \"react\";\nimport AddTodo from \"./components/AddTodo\";\nimport DisplayTodo from \"./components/DisplayTodo\";\n\nconst App = () => {\n  const [todoList, settodoList] = useState([]);\n  const [modeChange, setModeChange] = useState([]);\n\n  const setTodoHandler = (name) => {\n    settodoList((prevState) => {\n      return [...prevState, { Name: name, id: Math.random().toString() }];\n    });\n  };\n\n  const removeTodoHandler = (id) => {\n    const removeArr = [...todoList].filter(\n      (removeItem) => removeItem.id !== id\n    );\n    settodoList(removeArr);\n  };\n\n  const themeChangeHandler = (mode) => {\n    setModeChange(mode);\n  };\n\n  return (\n    <Fragment>\n      <AddTodo onsetTodo={setTodoHandler} themeChange={themeChangeHandler} />\n      <DisplayTodo\n        items={todoList}\n        removeTodo={removeTodoHandler}\n        mode={modeChange}\n      />\n    </Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DisplayTodo_container__7McDr\",\"darkContainer\":\"DisplayTodo_darkContainer__13MiH\",\"itemList\":\"DisplayTodo_itemList__PnkXw\",\"darkItemList\":\"DisplayTodo_darkItemList__3kwAd\",\"item\":\"DisplayTodo_item__1dmfO\",\"darkItem\":\"DisplayTodo_darkItem__19MLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkMode\":\"AddTodo_darkMode__1bNH3\",\"lightMode\":\"AddTodo_lightMode__1RlJ3\",\"input\":\"AddTodo_input__ciTEB\",\"inputLightMode\":\"AddTodo_inputLightMode__uzjw5\",\"theme\":\"AddTodo_theme__Evw1P\"};"],"sourceRoot":""}